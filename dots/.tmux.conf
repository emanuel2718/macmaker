# Scroll history to 100k lines
set-option -g history-limit 100000

unbind C-b
set-option -g prefix C-a
bind-key C-a last-window
bind-key a send-prefix


# Defaults
set -g mouse on
set -sg escape-time 0
set -g focus-events on
# set -t set-titles on
set -g base-index 1
setw -g pane-base-index 1
set -g renumber-windows on
set -g automatic-rename-format '#{b:pane_current_path}'
set -g clock-mode-style 12
set -s extended-keys on
set -g default-terminal "xterm-256color"
set -ga terminal-overrides ",xterm-256color:Tc"
setw -g automatic-rename on
set-option -g detach-on-destroy off
bind-key Space copy-mode

# Vim mode
set -g status-keys vi
setw -g mode-keys vi
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send -X copy-selection-and-cancel
bind-key -T copy-mode-vi Escape send -X cancel
bind-key -T copy-mode-vi d send -X halfpage-down
bind-key -T copy-mode-vi u send -X halfpage-up


# Disable confirmation on pane/window kill
bind-key & kill-window
bind-key x kill-pane

bind-key W choose-session

# Vim-like pane switches
bind -r l select-pane -R 
bind -r k select-pane -U 
bind -r j select-pane -D 
bind -r h select-pane -L 


bind-key C-h send-keys C-h
bind-key C-j send-keys C-j
bind-key C-k send-keys C-k
bind-key C-l send-keys C-l

# clashes with nvim config
# bind-key j previous-window
# bind-key k next-window
# bind-key C-j previous-window
# bind-key C-k next-window

bind-key -n M-k resize-pane -U 5
bind-key -n M-j resize-pane -D 5
bind-key -n M-h resize-pane -L 5
bind-key -n M-l resize-pane -R 5


is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n C-j if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n C-k if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n C-l if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'

bind-key [ swap-window -d -t -1
bind-key ] swap-window -d -t +1

bind-key t split-window -v -p 30 -c "#{pane_current_path}"
bind-key s split-window -c "#{pane_current_path}"
bind-key v split-window -h -c "#{pane_current_path}"
bind-key c new-window -a -c "#{pane_current_path}"
bind-key C command-prompt -p "New session:" "new-session -A -s '%%'"
bind-key - display-popup -d "#{pane_current_path}"
# split vertically or horizontally depending on size
bind-key Enter run "[[ $(($(tmux display -p '8*#{pane_width}-20*#{pane_height}'))) -lt 0 ]] && tmux splitw -v -c '#{pane_current_path}' || tmux splitw -h -c '#{pane_current_path}'"

# send keys to all panes
bind S command-prompt -p "Keys:" \
         "run \"tmux list-panes -F '##{session_name}:##{window_index}.##{pane_index}' \
                | xargs -I PANE tmux send-keys -t PANE '%1' Enter\""
# send command to all panes across windows
bind C-s command-prompt -p "Keys:" \
       "run \"tmux list-panes -a -F '##{session_name}:##{window_index}.##{pane_index}' \
              | xargs -I PANE tmux send-keys -t PANE '%1' Enter\""
# toggle sending keys to all panes
bind-key M-s set-window-option synchronize-panes

# Unbinds
unbind %
unbind Up
unbind Down
unbind Left
unbind Right

unbind C-Right
unbind C-Up
unbind C-Down
unbind C-Left

#Toggle mouse on
bind-key M \
  set-option -g mouse on \;\
  display-message 'Mouse: ON'

# Toggle mouse off
bind-key m \
  set-option -g mouse off \;\
  display-message 'Mouse: OFF'

# Theme
set -g status-style 'bg=default,fg=white' # transparent status bar
set -g status-position bottom
set -g pane-active-border-style "fg=white,bg=default"
set -g pane-border-style "fg=brightblack,bg=default"

set -g status-left-length 70
set -g status-left "#[fg=blue,bold]#S " # session name
# set -ga status-left "#[fg=white,bold]ямл "
set -ga status-left "#[fg=white,nobold]#(gitmux -timeout 300ms -cfg $HOME/.config/tmux/gitmux.conf) "

set -g status-right-length 70
set -g status-right "#{now_playing}"
# set -g status-right "#[fg=white.bold] %I:%M %p"

# [0 - command]
set -g window-status-format "#[fg=brightblack,nobold,bg=default]["
set -ga window-status-format "#[fg=brightblack,bg=default]#I #F "
set -ga window-status-format "#[fg=white,bg=default]#W"
set -ga window-status-format "#[fg=brightblack,nobold,bg=default]]"

# [0 * command]
set -g window-status-current-format "#[fg=brightblack,nobold,bg=default]["
set -ga window-status-current-format "#[fg=brightblack,nobold,bg=default]#I "
set -ga window-status-current-format "#[fg=magenta,nobold,bg=default]#F "
set -ga window-status-current-format "#[fg=white,bold,bg=default]#W"
set -ga window-status-current-format "#[fg=brightblack,nobold,bg=default]]"

# # tmux sessionizer
bind-key -r f run-shell "tmux neww tmux-sessionizer"

# Plugins
set -g @plugin 'tmux-plugins/tmux-sensible' # better defaults
set -g @plugin 'tmux-plugins/tmux-yank' # better clipboard
set -g @plugin 'tmux-plugins/tmux-prefix-highlight' # show prefix in status line
set -g @plugin 'laktak/extrakto' # use fzf to find and insert text from windows
set -g @plugin 'tmux-plugins/tmux-logging' # log pane output
set -g @plugin 'tmux-plugins/tmux-cowboy' # kill pane processes

# Plugin options
set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_show_sync_mode 'on'
set -g @prefix_highlight_empty_has_affixes 'on'
set -g @prefix_highlight_empty_prompt '^T'
set -g @prefix_highlight_copy_prompt '^C'
set -g @prefix_highlight_sync_prompt '^S'

set -g @fuzzback-popup 1

set -g @logging-path "~/.tmux/logs"

set -g @plugin 'tmux-plugins/tpm'
run '~/.tmux/plugins/tpm/tpm'
